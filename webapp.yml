apiVersion: apps/v1
kind: Deployment
metadata:
  name: webapp-deployment
  labels:
    app: mywebapp
spec:
  # 아래 pod(template)를 몇 개 생성할 것인가?
  replicas: 1
  selector:
    matchLabels:
      # 위에 mywebapp에 매칭된다.
      app: mywebapp
  template:
    metadata:
      labels:
        # 위에 mywebapp에 매칭된다.
        app: mywebapp
    spec:
      containers:
        - name: mywebapp
          image: nanajanashia/k8s-demo-app:v1.0
          ports:
            - containerPort: 3000
          # config와 secret 정보를 webapp deployment에 주입한다.
          env:
            - name: USER_NAME
              valueFrom:
                secretKeyRef:
                  name: mymongo-secret
                  key: mongo-user
            - name: USER_PWD
              valueFrom:
                secretKeyRef:
                  name: mymongo-secret
                  key: mongo-password
            - name: DB_URL
              valueFrom:
                configMapKeyRef:
                  name: mongo-config
                  key: mongo-url
---
# yml에서는 '---'를 사용함으로써 한 파일에 여러 설정이 가능하다.
apiVersion: v1
kind: Service
metadata:
  name: mywebapp-service
spec:
  # external type
  type: NodePort
  selector:
    # 위에 설정한 pod로 보낼 것이기에 mywebapp로 매칭시켜 준다.
    app: mywebapp
  ports:
    - protocol: TCP
      # 외부테서 접근을 허용하는 port (마음대로)
      port: 3000
      # 위 mongodb 컨테이너의 port
      targetPort: 3000
      # NodePort requires this. and range is 30000 - 32767
      nodePort: 30300